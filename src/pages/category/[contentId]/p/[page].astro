---
import { getAllCategories, getNews, getAllNews } from "@libraries/microcms";
import Layout from "@layouts/Layout.astro";
import Pagination from "@components/Pagination.astro";
import NewsList from "@components/News.astro";
import { Center, Container, Stack, Text } from "lism-css/astro";
import {
  SITE_NAME,
  NEWS_LIST_LIMIT,
  CATEGORY_BASE_PATH,
} from "@constants/index.astro";
import type { GetStaticPaths } from "astro";

// ニュース一覧ページの全パスを取得
//   SSG用：全てのルートをビルド時に決める必要があるため
export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const allCategories = await getAllCategories({ fields: ["id"] });
  const allNews = await getAllNews({ fields: ["category"] });
  return allCategories.flatMap((category) => {
    const filteredNews = allNews.filter(
      (news) => news.category.id === category.id,
    );
    return paginate(filteredNews, {
      params: {
        contentId: category.id,
      },
      pageSize: NEWS_LIST_LIMIT,
    });
  });
};

// 表示するコンテンツを取得
const { contentId, page } = Astro.params;
// pageの型をnumberに絞る
const pageNum = Number(page);
if (isNaN(pageNum) || pageNum < 1) {
  throw new Error("Invalid page number");
}
const { contents: news, totalCount } = await getNews({
  fields: ["id", "title", "description", "category", "thumbnail"],
  filters: `category[equals]${contentId}`,
  limit: NEWS_LIST_LIMIT,
  offset: NEWS_LIST_LIMIT * (pageNum - 1),
});
const categoryName = news[0].category.name;
---

<Layout title={`${pageNum}ページ - ${categoryName} | ${SITE_NAME}`}>
  <Container size="m" hasGutter mt="50">
    <Center minH="30svh" bgc="base-1">
      <Stack g="10" ai="c">
        <Text fz="2xl" fw="normal" lts="xl">{categoryName}</Text>
      </Stack>
    </Center>
    <Stack g="40">
      <NewsList news={news} />
      <Pagination
        totalCount={totalCount}
        current={pageNum}
        basePath={`${CATEGORY_BASE_PATH}/${contentId}`}
      />
    </Stack>
  </Container>
</Layout>
